// lib/prokerala/prompts.ts
import type { AstrologyData, YogaItem, DoshaItem, DignityItem, AspectItem, VimshottariDasha } from "./types";

export type PromptQuery = {
  text?: string;
  language?: string; // "ne" | "en"
};

export type AstroPromptTemplate = {
  systemPrompt: string;
  userPrompt: string;
};

function listYogas(yogas: YogaItem[] = []): string {
  if (!yogas.length) return "тАв (рдХреБрдиреИ рд░рд╛рдЬрдпреЛрдЧ рднреЗрдЯрд┐рдПрди)\n";
  return yogas.map((y, i) => `${i + 1}. ${y.label} тАФ ${y.factors.join("; ")}`).join("\n");
}

function listDoshas(doshas: DoshaItem[] = []): string {
  if (!doshas.length) return "тАв (рдХреБрдиреИ рджреЛрд╖ рднреЗрдЯрд┐рдПрди)\n";
  return doshas.map((d, i) => `${i + 1}. ${d.label} тАФ ${d.factors.join("; ")}`).join("\n");
}

function listPlanets(data: AstrologyData): string {
  const rows = (data.planetPositions || [])
    .filter((p) => p.planet !== "Asc")
    .map(
      (p) => `${p.planet}: ${p.sign} (H${p.house})${p.isRetrograde ? " [R]" : ""}`
    );
  return rows.join("\n");
}

function listDignities(dignities: DignityItem[] = []): string {
  if (!dignities.length) return "тАв (рдХреБрдиреИ рдЧреНрд░рд╣рдХреЛ рдЧрд░рд┐рдорд╛ рдЬрд╛рдирдХрд╛рд░реА рдЫреИрди)\n";
  return dignities.map((d, i) => `${i + 1}. ${d.planet}: ${d.status || "Neutral"}`).join("\n");
}

function listAspects(aspects: AspectItem[] = []): string {
  if (!aspects.length) return "тАв (рдХреБрдиреИ рджреГрд╖реНрдЯрд┐ рдЬрд╛рдирдХрд╛рд░реА рдЫреИрди)\n";
  return aspects.map((a, i) => `${i + 1}. ${a.fromPlanet} тЖТ ${a.toPlanetOrHouse} (${a.type})`).join("\n");
}

function listVimshottari(vimshottari: VimshottariDasha | null): string {
  if (!vimshottari) return "тАв (рд╡рд┐рдВрд╢реЛрддреНрддрд░реА рджрд╢рд╛ рдЬрд╛рдирдХрд╛рд░реА рдЫреИрди)\n";
  
  let result = "";
  if (vimshottari.current) {
    result += `рд╡рд░реНрддрдорд╛рди рджрд╢рд╛: ${vimshottari.current.planet} (${vimshottari.current.start} - ${vimshottari.current.end})\n`;
  }
  
  if (vimshottari.timelineMaha && vimshottari.timelineMaha.length > 0) {
    result += "рдорд╣рд╛рджрд╢рд╛ рдХреНрд░рдо:\n";
    result += vimshottari.timelineMaha.slice(0, 5).map((d, i) => 
      `${i + 1}. ${d.planet} (${d.start} - ${d.end})`
    ).join("\n");
  }
  
  return result || "тАв (рд╡рд┐рдВрд╢реЛрддреНрддрд░реА рджрд╢рд╛ рдЬрд╛рдирдХрд╛рд░реА рдЫреИрди)\n";
}

export function generateAstroPrompt(
  q: PromptQuery,
  data: AstrologyData
): AstroPromptTemplate {
  const lang = q.language || "ne";
  const questionText = q.text || "тАФ (рдХреБрдиреИ рд╡рд┐рд╢реЗрд╖ рдкреНрд░рд╢реНрди рдЫреИрди) тАФ";

  const systemPrompt = `
рддрдкрд╛рдИрдВ рдПрдХ рдЕрдиреБрд╢рд╛рд╕рдирдмрджреНрдз рд╡реИрджрд┐рдХ рдЬреНрдпреЛрддрд┐рд╖ рд╕рд╣рд╛рдпрдХ рд╣реБрдиреБрд╣реБрдиреНрдЫред

рдорд╣рддреНрд╡рдкреВрд░реНрдг рдирд┐рд░реНрджреЗрд╢рдирд╣рд░реВ:
1. рдХреЗрд╡рд▓ рдкреНрд░рджрд╛рди рдЧрд░рд┐рдПрдХреЛ рдЬрдиреНрдордХреБрдгреНрдбрд▓реА рдбреЗрдЯрд╛рдорд╛ рдЖрдзрд╛рд░рд┐рдд рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдЧрд░реНрдиреБрд╣реЛрд╕реН
2. Transit, рдЕрдиреБрдорд╛рдирд┐рдд рд╡рд╛ рдмрд╛рд╣реНрдп рдЬрд╛рдирдХрд╛рд░реА рдкреНрд░рдпреЛрдЧ рдирдЧрд░реНрдиреБрд╣реЛрд╕реН
3. рдХреЗрд╡рд▓ рдЧрдгрдирд╛рдЧрдд рддрдереНрдпрд╣рд░реВрдорд╛ рдЖрдзрд╛рд░рд┐рдд рдирддрд┐рдЬрд╛ рджрд┐рдиреБрд╣реЛрд╕реН
4. рдпрджрд┐ рдХреБрдиреИ рдЬрд╛рдирдХрд╛рд░реА рдЙрдкрд▓рдмреНрдз рдЫреИрди рднрдиреЗ, рддреНрдпрд╕рд▓рд╛рдИ рд╕реНрдкрд╖реНрдЯ рд░реВрдкрдорд╛ рдЙрд▓реНрд▓реЗрдЦ рдЧрд░реНрдиреБрд╣реЛрд╕реН
5. рдиреЗрдкрд╛рд▓реА рднрд╛рд╖рд╛рдорд╛ рдЬрд╡рд╛рдл рджрд┐рдиреБрд╣реЛрд╕реН (рдпрджрд┐ language="en" рднрдП рдЕрдВрдЧреНрд░реЗрдЬреАрдорд╛)
6. рдкреНрд░рддреНрдпреЗрдХ рд╡рд┐рд╢реНрд▓реЗрд╖рдгрдХреЛ рд▓рд╛рдЧрд┐ рддрдереНрдпрд╣рд░реВ рдкреНрд░рдорд╛рдгрд┐рдд рдЧрд░реНрдиреБрд╣реЛрд╕реН

рдирд┐рд╖реЗрдзрд┐рдд рдХрд╛рд░реНрдпрд╣рд░реВ:
- Transit рдЧреНрд░рд╣рд╣рд░реВрдХреЛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг
- рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рд╡рд╛ рдЕрдиреБрдорд╛рди
- рдмрд╛рд╣реНрдп рдЬреНрдпреЛрддрд┐рд╖ рд╕реНрд░реЛрддрд╣рд░реВрдХреЛ рдкреНрд░рдпреЛрдЧ
- рд╕рд╛рдорд╛рдиреНрдп рдЬреНрдпреЛрддрд┐рд╖ рдЬрд╛рдирдХрд╛рд░реАрдХреЛ рдкреНрд░рдпреЛрдЧ
`.trim();

  const userPrompt = `
ЁЯФн рд▓рдЧреНрди/рд░рд╛рд╢реА: ${data.zodiacSign || "-"}

ЁЯкР рдЧреНрд░рд╣ рд╕реНрдерд┐рддрд┐:
${listPlanets(data)}

ЁЯПЖ рдЧреНрд░рд╣рдХреЛ рдЧрд░рд┐рдорд╛:
${listDignities(data.dignities || [])}

ЁЯСБя╕П рджреГрд╖реНрдЯрд┐рд╣рд░реВ:
${listAspects(data.aspects || [])}

ЁЯУЬ рд░рд╛рдЬрдпреЛрдЧрд╣рд░реВ:
${listYogas(data.yogas || [])}

тЪая╕П рджреЛрд╖рд╣рд░реВ:
${listDoshas(data.doshas || [])}

тП░ рд╡рд┐рдВрд╢реЛрддреНрддрд░реА рджрд╢рд╛:
${listVimshottari(data.vimshottari || null)}

рдкреНрд░рд╢реНрди: ${questionText}

рдХреГрдкрдпрд╛ рдЙрдкрд░реЛрдХреНрдд рдЬрд╛рдирдХрд╛рд░реАрдорд╛ рдЖрдзрд╛рд░рд┐рдд рд╡рд┐рд╕реНрддреГрдд рдЬреНрдпреЛрддрд┐рд╖ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдкреНрд░рджрд╛рди рдЧрд░реНрдиреБрд╣реЛрд╕реНред
`.trim();

  return { systemPrompt, userPrompt };
}
